ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adxl345.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.setTargetDeviceAddress,"ax",%progbits
  18              		.align	1
  19              		.global	setTargetDeviceAddress
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	setTargetDeviceAddress:
  27              	.LVL0:
  28              	.LFB130:
  29              		.file 1 "Core/Src/adxl345.c"
   1:Core/Src/adxl345.c **** #include "adxl345.h"
   2:Core/Src/adxl345.c **** 
   3:Core/Src/adxl345.c **** //Buffer to perform operation
   4:Core/Src/adxl345.c **** uint8_t _buff[6];
   5:Core/Src/adxl345.c **** //Status variable
   6:Core/Src/adxl345.c **** HAL_StatusTypeDef _status;
   7:Core/Src/adxl345.c **** 
   8:Core/Src/adxl345.c **** 
   9:Core/Src/adxl345.c **** void setTargetDeviceAddress(I2C_HandleTypeDef *hi2c, uint16_t address){
  30              		.loc 1 9 71 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  10:Core/Src/adxl345.c ****     hi2c->Devaddress = address;
  35              		.loc 1 10 5 view .LVU1
  36              		.loc 1 10 22 is_stmt 0 view .LVU2
  37 0000 4164     		str	r1, [r0, #68]
  11:Core/Src/adxl345.c **** }
  38              		.loc 1 11 1 view .LVU3
  39 0002 7047     		bx	lr
  40              		.cfi_endproc
  41              	.LFE130:
  43              		.section	.text.AccelWrite,"ax",%progbits
  44              		.align	1
  45              		.global	AccelWrite
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s 			page 2


  49              		.fpu fpv4-sp-d16
  51              	AccelWrite:
  52              	.LVL1:
  53              	.LFB133:
  12:Core/Src/adxl345.c **** 
  13:Core/Src/adxl345.c **** HAL_StatusTypeDef AccelInit(I2C_HandleTypeDef *hi2c){
  14:Core/Src/adxl345.c ****     HAL_StatusTypeDef status;
  15:Core/Src/adxl345.c **** 	status = AccelWrite (hi2c, 0x2d, 0x00);  // reset all bits
  16:Core/Src/adxl345.c ****     if(status != HAL_OK){
  17:Core/Src/adxl345.c ****         return status;
  18:Core/Src/adxl345.c ****     }
  19:Core/Src/adxl345.c ****     status = AccelWrite (hi2c, 0x31, 0x0B);  // data_format range= +-16g
  20:Core/Src/adxl345.c ****     if(status != HAL_OK){
  21:Core/Src/adxl345.c ****         return status;
  22:Core/Src/adxl345.c ****     }
  23:Core/Src/adxl345.c **** 	status = AccelWrite (hi2c, 0x2c, 0x0E);  // 1600 hz output data rate
  24:Core/Src/adxl345.c ****     if(status != HAL_OK){
  25:Core/Src/adxl345.c ****         return status;
  26:Core/Src/adxl345.c ****     }
  27:Core/Src/adxl345.c **** 	status = AccelWrite (hi2c, 0x2d, 0x08);  // Start measuring
  28:Core/Src/adxl345.c ****     if(status != HAL_OK){
  29:Core/Src/adxl345.c ****         return status;
  30:Core/Src/adxl345.c ****     }
  31:Core/Src/adxl345.c ****     return status;
  32:Core/Src/adxl345.c **** }
  33:Core/Src/adxl345.c **** 
  34:Core/Src/adxl345.c **** HAL_StatusTypeDef getAccelerations(I2C_HandleTypeDef *hi2c, Accelerations *accelerations) {
  35:Core/Src/adxl345.c ****     _status = AccelReadData(hi2c, _buff, 0x32, 6);
  36:Core/Src/adxl345.c ****     if(_status == HAL_OK){
  37:Core/Src/adxl345.c ****         accelerations->x = ((int16_t)_buff[1] << 8) + (int16_t)_buff[0];
  38:Core/Src/adxl345.c ****         accelerations->y = ((int16_t)_buff[3] << 8) + (int16_t)_buff[2];
  39:Core/Src/adxl345.c ****         accelerations->z = ((int16_t)_buff[5] << 8) + (int16_t)_buff[4];
  40:Core/Src/adxl345.c ****     }
  41:Core/Src/adxl345.c ****     return _status;
  42:Core/Src/adxl345.c **** }
  43:Core/Src/adxl345.c **** 
  44:Core/Src/adxl345.c **** HAL_StatusTypeDef AccelWrite(I2C_HandleTypeDef *hi2c, uint8_t reg, uint8_t value) {
  54              		.loc 1 44 83 is_stmt 1 view -0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 8
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		.loc 1 44 83 is_stmt 0 view .LVU5
  59 0000 00B5     		push	{lr}
  60              	.LCFI0:
  61              		.cfi_def_cfa_offset 4
  62              		.cfi_offset 14, -4
  63 0002 85B0     		sub	sp, sp, #20
  64              	.LCFI1:
  65              		.cfi_def_cfa_offset 24
  45:Core/Src/adxl345.c ****     uint8_t data[2] = {reg, value};
  66              		.loc 1 45 5 is_stmt 1 view .LVU6
  67              		.loc 1 45 13 is_stmt 0 view .LVU7
  68 0004 8DF80C10 		strb	r1, [sp, #12]
  69 0008 8DF80D20 		strb	r2, [sp, #13]
  46:Core/Src/adxl345.c ****     return HAL_I2C_Master_Transmit(hi2c, hi2c->Devaddress, data, 2, 100);
  70              		.loc 1 46 5 is_stmt 1 view .LVU8
  71              		.loc 1 46 46 is_stmt 0 view .LVU9
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s 			page 3


  72 000c 416C     		ldr	r1, [r0, #68]
  73              	.LVL2:
  74              		.loc 1 46 12 view .LVU10
  75 000e 6423     		movs	r3, #100
  76 0010 0093     		str	r3, [sp]
  77 0012 0223     		movs	r3, #2
  78 0014 03AA     		add	r2, sp, #12
  79              	.LVL3:
  80              		.loc 1 46 12 view .LVU11
  81 0016 89B2     		uxth	r1, r1
  82 0018 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
  83              	.LVL4:
  47:Core/Src/adxl345.c **** }
  84              		.loc 1 47 1 view .LVU12
  85 001c 05B0     		add	sp, sp, #20
  86              	.LCFI2:
  87              		.cfi_def_cfa_offset 4
  88              		@ sp needed
  89 001e 5DF804FB 		ldr	pc, [sp], #4
  90              		.cfi_endproc
  91              	.LFE133:
  93              		.section	.text.AccelInit,"ax",%progbits
  94              		.align	1
  95              		.global	AccelInit
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu fpv4-sp-d16
 101              	AccelInit:
 102              	.LVL5:
 103              	.LFB131:
  13:Core/Src/adxl345.c ****     HAL_StatusTypeDef status;
 104              		.loc 1 13 53 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
  13:Core/Src/adxl345.c ****     HAL_StatusTypeDef status;
 108              		.loc 1 13 53 is_stmt 0 view .LVU14
 109 0000 10B5     		push	{r4, lr}
 110              	.LCFI3:
 111              		.cfi_def_cfa_offset 8
 112              		.cfi_offset 4, -8
 113              		.cfi_offset 14, -4
 114 0002 0446     		mov	r4, r0
  14:Core/Src/adxl345.c **** 	status = AccelWrite (hi2c, 0x2d, 0x00);  // reset all bits
 115              		.loc 1 14 5 is_stmt 1 view .LVU15
  15:Core/Src/adxl345.c ****     if(status != HAL_OK){
 116              		.loc 1 15 2 view .LVU16
  15:Core/Src/adxl345.c ****     if(status != HAL_OK){
 117              		.loc 1 15 11 is_stmt 0 view .LVU17
 118 0004 0022     		movs	r2, #0
 119 0006 2D21     		movs	r1, #45
 120 0008 FFF7FEFF 		bl	AccelWrite
 121              	.LVL6:
  16:Core/Src/adxl345.c ****         return status;
 122              		.loc 1 16 5 is_stmt 1 view .LVU18
  16:Core/Src/adxl345.c ****         return status;
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s 			page 4


 123              		.loc 1 16 7 is_stmt 0 view .LVU19
 124 000c 0346     		mov	r3, r0
 125 000e 08B1     		cbz	r0, .L7
 126              	.LVL7:
 127              	.L5:
  32:Core/Src/adxl345.c **** 
 128              		.loc 1 32 1 view .LVU20
 129 0010 1846     		mov	r0, r3
 130 0012 10BD     		pop	{r4, pc}
 131              	.LVL8:
 132              	.L7:
  19:Core/Src/adxl345.c ****     if(status != HAL_OK){
 133              		.loc 1 19 5 is_stmt 1 view .LVU21
  19:Core/Src/adxl345.c ****     if(status != HAL_OK){
 134              		.loc 1 19 14 is_stmt 0 view .LVU22
 135 0014 0B22     		movs	r2, #11
 136 0016 3121     		movs	r1, #49
 137 0018 2046     		mov	r0, r4
 138              	.LVL9:
  19:Core/Src/adxl345.c ****     if(status != HAL_OK){
 139              		.loc 1 19 14 view .LVU23
 140 001a FFF7FEFF 		bl	AccelWrite
 141              	.LVL10:
  20:Core/Src/adxl345.c ****         return status;
 142              		.loc 1 20 5 is_stmt 1 view .LVU24
  20:Core/Src/adxl345.c ****         return status;
 143              		.loc 1 20 7 is_stmt 0 view .LVU25
 144 001e 0346     		mov	r3, r0
 145 0020 0028     		cmp	r0, #0
 146 0022 F5D1     		bne	.L5
  23:Core/Src/adxl345.c ****     if(status != HAL_OK){
 147              		.loc 1 23 2 is_stmt 1 view .LVU26
  23:Core/Src/adxl345.c ****     if(status != HAL_OK){
 148              		.loc 1 23 11 is_stmt 0 view .LVU27
 149 0024 0E22     		movs	r2, #14
 150 0026 2C21     		movs	r1, #44
 151 0028 2046     		mov	r0, r4
 152              	.LVL11:
  23:Core/Src/adxl345.c ****     if(status != HAL_OK){
 153              		.loc 1 23 11 view .LVU28
 154 002a FFF7FEFF 		bl	AccelWrite
 155              	.LVL12:
  24:Core/Src/adxl345.c ****         return status;
 156              		.loc 1 24 5 is_stmt 1 view .LVU29
  24:Core/Src/adxl345.c ****         return status;
 157              		.loc 1 24 7 is_stmt 0 view .LVU30
 158 002e 0346     		mov	r3, r0
 159 0030 0028     		cmp	r0, #0
 160 0032 EDD1     		bne	.L5
  27:Core/Src/adxl345.c ****     if(status != HAL_OK){
 161              		.loc 1 27 2 is_stmt 1 view .LVU31
  27:Core/Src/adxl345.c ****     if(status != HAL_OK){
 162              		.loc 1 27 11 is_stmt 0 view .LVU32
 163 0034 0822     		movs	r2, #8
 164 0036 2D21     		movs	r1, #45
 165 0038 2046     		mov	r0, r4
 166              	.LVL13:
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s 			page 5


  27:Core/Src/adxl345.c ****     if(status != HAL_OK){
 167              		.loc 1 27 11 view .LVU33
 168 003a FFF7FEFF 		bl	AccelWrite
 169              	.LVL14:
 170 003e 0346     		mov	r3, r0
 171              	.LVL15:
  28:Core/Src/adxl345.c ****         return status;
 172              		.loc 1 28 5 is_stmt 1 view .LVU34
 173 0040 E6E7     		b	.L5
 174              		.cfi_endproc
 175              	.LFE131:
 177              		.section	.text.AccelReadData,"ax",%progbits
 178              		.align	1
 179              		.global	AccelReadData
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu fpv4-sp-d16
 185              	AccelReadData:
 186              	.LVL16:
 187              	.LFB134:
  48:Core/Src/adxl345.c **** 
  49:Core/Src/adxl345.c **** HAL_StatusTypeDef AccelReadData(I2C_HandleTypeDef *hi2c, uint8_t *buffer, uint8_t reg, int nb_byte)
 188              		.loc 1 49 101 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		.loc 1 49 101 is_stmt 0 view .LVU36
 193 0000 30B5     		push	{r4, r5, lr}
 194              	.LCFI4:
 195              		.cfi_def_cfa_offset 12
 196              		.cfi_offset 4, -12
 197              		.cfi_offset 5, -8
 198              		.cfi_offset 14, -4
 199 0002 85B0     		sub	sp, sp, #20
 200              	.LCFI5:
 201              		.cfi_def_cfa_offset 32
  50:Core/Src/adxl345.c ****     return HAL_I2C_Mem_Read(hi2c, hi2c->Devaddress, reg, 1, buffer, nb_byte, 100);
 202              		.loc 1 50 5 is_stmt 1 view .LVU37
 203              		.loc 1 50 39 is_stmt 0 view .LVU38
 204 0004 446C     		ldr	r4, [r0, #68]
 205              		.loc 1 50 12 view .LVU39
 206 0006 6425     		movs	r5, #100
 207 0008 0295     		str	r5, [sp, #8]
 208 000a 9BB2     		uxth	r3, r3
 209              	.LVL17:
 210              		.loc 1 50 12 view .LVU40
 211 000c 0193     		str	r3, [sp, #4]
 212 000e 0091     		str	r1, [sp]
 213 0010 0123     		movs	r3, #1
 214 0012 A1B2     		uxth	r1, r4
 215              	.LVL18:
 216              		.loc 1 50 12 view .LVU41
 217 0014 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 218              	.LVL19:
  51:Core/Src/adxl345.c **** }
 219              		.loc 1 51 1 view .LVU42
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s 			page 6


 220 0018 05B0     		add	sp, sp, #20
 221              	.LCFI6:
 222              		.cfi_def_cfa_offset 12
 223              		@ sp needed
 224 001a 30BD     		pop	{r4, r5, pc}
 225              		.cfi_endproc
 226              	.LFE134:
 228              		.section	.text.getAccelerations,"ax",%progbits
 229              		.align	1
 230              		.global	getAccelerations
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 234              		.fpu fpv4-sp-d16
 236              	getAccelerations:
 237              	.LVL20:
 238              	.LFB132:
  34:Core/Src/adxl345.c ****     _status = AccelReadData(hi2c, _buff, 0x32, 6);
 239              		.loc 1 34 91 is_stmt 1 view -0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
  34:Core/Src/adxl345.c ****     _status = AccelReadData(hi2c, _buff, 0x32, 6);
 243              		.loc 1 34 91 is_stmt 0 view .LVU44
 244 0000 10B5     		push	{r4, lr}
 245              	.LCFI7:
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 4, -8
 248              		.cfi_offset 14, -4
 249 0002 0C46     		mov	r4, r1
  35:Core/Src/adxl345.c ****     if(_status == HAL_OK){
 250              		.loc 1 35 5 is_stmt 1 view .LVU45
  35:Core/Src/adxl345.c ****     if(_status == HAL_OK){
 251              		.loc 1 35 15 is_stmt 0 view .LVU46
 252 0004 0623     		movs	r3, #6
 253 0006 3222     		movs	r2, #50
 254 0008 0C49     		ldr	r1, .L13
 255              	.LVL21:
  35:Core/Src/adxl345.c ****     if(_status == HAL_OK){
 256              		.loc 1 35 15 view .LVU47
 257 000a FFF7FEFF 		bl	AccelReadData
 258              	.LVL22:
  35:Core/Src/adxl345.c ****     if(_status == HAL_OK){
 259              		.loc 1 35 13 view .LVU48
 260 000e 0C4B     		ldr	r3, .L13+4
 261 0010 1870     		strb	r0, [r3]
  36:Core/Src/adxl345.c ****         accelerations->x = ((int16_t)_buff[1] << 8) + (int16_t)_buff[0];
 262              		.loc 1 36 5 is_stmt 1 view .LVU49
  36:Core/Src/adxl345.c ****         accelerations->x = ((int16_t)_buff[1] << 8) + (int16_t)_buff[0];
 263              		.loc 1 36 7 is_stmt 0 view .LVU50
 264 0012 78B9     		cbnz	r0, .L11
  37:Core/Src/adxl345.c ****         accelerations->y = ((int16_t)_buff[3] << 8) + (int16_t)_buff[2];
 265              		.loc 1 37 9 is_stmt 1 view .LVU51
  37:Core/Src/adxl345.c ****         accelerations->y = ((int16_t)_buff[3] << 8) + (int16_t)_buff[2];
 266              		.loc 1 37 43 is_stmt 0 view .LVU52
 267 0014 094B     		ldr	r3, .L13
 268 0016 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s 			page 7


  37:Core/Src/adxl345.c ****         accelerations->y = ((int16_t)_buff[3] << 8) + (int16_t)_buff[2];
 269              		.loc 1 37 69 view .LVU53
 270 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  37:Core/Src/adxl345.c ****         accelerations->y = ((int16_t)_buff[3] << 8) + (int16_t)_buff[2];
 271              		.loc 1 37 53 view .LVU54
 272 001a 02EB0122 		add	r2, r2, r1, lsl #8
  37:Core/Src/adxl345.c ****         accelerations->y = ((int16_t)_buff[3] << 8) + (int16_t)_buff[2];
 273              		.loc 1 37 26 view .LVU55
 274 001e 2280     		strh	r2, [r4]	@ movhi
  38:Core/Src/adxl345.c ****         accelerations->z = ((int16_t)_buff[5] << 8) + (int16_t)_buff[4];
 275              		.loc 1 38 9 is_stmt 1 view .LVU56
  38:Core/Src/adxl345.c ****         accelerations->z = ((int16_t)_buff[5] << 8) + (int16_t)_buff[4];
 276              		.loc 1 38 43 is_stmt 0 view .LVU57
 277 0020 D978     		ldrb	r1, [r3, #3]	@ zero_extendqisi2
  38:Core/Src/adxl345.c ****         accelerations->z = ((int16_t)_buff[5] << 8) + (int16_t)_buff[4];
 278              		.loc 1 38 69 view .LVU58
 279 0022 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
  38:Core/Src/adxl345.c ****         accelerations->z = ((int16_t)_buff[5] << 8) + (int16_t)_buff[4];
 280              		.loc 1 38 53 view .LVU59
 281 0024 02EB0122 		add	r2, r2, r1, lsl #8
  38:Core/Src/adxl345.c ****         accelerations->z = ((int16_t)_buff[5] << 8) + (int16_t)_buff[4];
 282              		.loc 1 38 26 view .LVU60
 283 0028 6280     		strh	r2, [r4, #2]	@ movhi
  39:Core/Src/adxl345.c ****     }
 284              		.loc 1 39 9 is_stmt 1 view .LVU61
  39:Core/Src/adxl345.c ****     }
 285              		.loc 1 39 43 is_stmt 0 view .LVU62
 286 002a 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
  39:Core/Src/adxl345.c ****     }
 287              		.loc 1 39 69 view .LVU63
 288 002c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
  39:Core/Src/adxl345.c ****     }
 289              		.loc 1 39 53 view .LVU64
 290 002e 03EB0223 		add	r3, r3, r2, lsl #8
  39:Core/Src/adxl345.c ****     }
 291              		.loc 1 39 26 view .LVU65
 292 0032 A380     		strh	r3, [r4, #4]	@ movhi
 293              	.L11:
  41:Core/Src/adxl345.c **** }
 294              		.loc 1 41 5 is_stmt 1 view .LVU66
  42:Core/Src/adxl345.c **** 
 295              		.loc 1 42 1 is_stmt 0 view .LVU67
 296 0034 024B     		ldr	r3, .L13+4
 297 0036 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 298 0038 10BD     		pop	{r4, pc}
 299              	.LVL23:
 300              	.L14:
  42:Core/Src/adxl345.c **** 
 301              		.loc 1 42 1 view .LVU68
 302 003a 00BF     		.align	2
 303              	.L13:
 304 003c 00000000 		.word	.LANCHOR0
 305 0040 00000000 		.word	.LANCHOR1
 306              		.cfi_endproc
 307              	.LFE132:
 309              		.section	.text.AccelGetId,"ax",%progbits
 310              		.align	1
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s 			page 8


 311              		.global	AccelGetId
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu fpv4-sp-d16
 317              	AccelGetId:
 318              	.LVL24:
 319              	.LFB135:
  52:Core/Src/adxl345.c **** 
  53:Core/Src/adxl345.c **** HAL_StatusTypeDef AccelGetId(I2C_HandleTypeDef *hi2c, int *id){
 320              		.loc 1 53 63 is_stmt 1 view -0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		.loc 1 53 63 is_stmt 0 view .LVU70
 325 0000 08B5     		push	{r3, lr}
 326              	.LCFI8:
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 3, -8
 329              		.cfi_offset 14, -4
  54:Core/Src/adxl345.c ****     return AccelReadData(hi2c, (uint8_t *)id, 0x00, 1);
 330              		.loc 1 54 5 is_stmt 1 view .LVU71
 331              		.loc 1 54 12 is_stmt 0 view .LVU72
 332 0002 0123     		movs	r3, #1
 333 0004 0022     		movs	r2, #0
 334 0006 FFF7FEFF 		bl	AccelReadData
 335              	.LVL25:
  55:Core/Src/adxl345.c **** }...
 336              		.loc 1 55 1 view .LVU73
 337 000a 08BD     		pop	{r3, pc}
 338              		.cfi_endproc
 339              	.LFE135:
 341              		.global	_status
 342              		.global	_buff
 343              		.section	.bss._buff,"aw",%nobits
 344              		.align	2
 345              		.set	.LANCHOR0,. + 0
 348              	_buff:
 349 0000 00000000 		.space	6
 349      0000
 350              		.section	.bss._status,"aw",%nobits
 351              		.set	.LANCHOR1,. + 0
 354              	_status:
 355 0000 00       		.space	1
 356              		.text
 357              	.Letext0:
 358              		.file 2 "c:\\gnu\\gnu_arm_embedded_toolchain\\10-2020-q4-major\\arm-none-eabi\\include\\machine\\_
 359              		.file 3 "c:\\gnu\\gnu_arm_embedded_toolchain\\10-2020-q4-major\\arm-none-eabi\\include\\sys\\_stdi
 360              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 361              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 362              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 363              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 364              		.file 8 "Core/Inc/adxl345.h"
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 adxl345.c
C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s:18     .text.setTargetDeviceAddress:00000000 $t
C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s:26     .text.setTargetDeviceAddress:00000000 setTargetDeviceAddress
C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s:44     .text.AccelWrite:00000000 $t
C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s:51     .text.AccelWrite:00000000 AccelWrite
C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s:94     .text.AccelInit:00000000 $t
C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s:101    .text.AccelInit:00000000 AccelInit
C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s:178    .text.AccelReadData:00000000 $t
C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s:185    .text.AccelReadData:00000000 AccelReadData
C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s:229    .text.getAccelerations:00000000 $t
C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s:236    .text.getAccelerations:00000000 getAccelerations
C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s:304    .text.getAccelerations:0000003c $d
C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s:310    .text.AccelGetId:00000000 $t
C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s:317    .text.AccelGetId:00000000 AccelGetId
C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s:354    .bss._status:00000000 _status
C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s:348    .bss._buff:00000000 _buff
C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s:344    .bss._buff:00000000 $d
C:\Users\zacfi\AppData\Local\Temp\ccnillBN.s:355    .bss._status:00000000 $d

UNDEFINED SYMBOLS
HAL_I2C_Master_Transmit
HAL_I2C_Mem_Read
