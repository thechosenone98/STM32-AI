ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	Error_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	Error_Handler:
  27              	.LFB132:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "crc.h"
  23:Core/Src/main.c **** #include "i2c.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** #include "app_x-cube-ai.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include "adxl345.h"
  30:Core/Src/main.c **** #include "usart.h"
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s 			page 2


  31:Core/Src/main.c **** /* USER CODE END Includes */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****   * @brief  The application entry point.
  66:Core/Src/main.c ****   * @retval int
  67:Core/Src/main.c ****   */
  68:Core/Src/main.c **** int main(void)
  69:Core/Src/main.c **** {
  70:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****     /* USER CODE END 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****     /* MCU Configuration--------------------------------------------------------*/
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Core/Src/main.c ****     HAL_Init();
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****     /* USER CODE BEGIN Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****     /* USER CODE END Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****     /* Configure the system clock */
  84:Core/Src/main.c ****     SystemClock_Config();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****     /* USER CODE BEGIN SysInit */
  87:Core/Src/main.c **** 
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s 			page 3


  88:Core/Src/main.c ****     /* USER CODE END SysInit */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****     /* Initialize all configured peripherals */
  91:Core/Src/main.c ****     MX_GPIO_Init();
  92:Core/Src/main.c ****     MX_CRC_Init();
  93:Core/Src/main.c ****     MX_I2C1_Init();
  94:Core/Src/main.c ****     MX_X_CUBE_AI_Init();
  95:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
  96:Core/Src/main.c ****     MX_USART2_UART_Init();
  97:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)"Initialing of UART module completed!\n", 37, 100);
  98:Core/Src/main.c ****     AccelInit(&hi2c1);
  99:Core/Src/main.c ****     setTargetDeviceAddress(&hi2c1, 0x53 << 1);
 100:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)"Initialing of I2C module completed!\n", 36, 100);
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****     //Get ID of Accelerometer module (ensures the connection is working correctly)
 103:Core/Src/main.c ****     HAL_StatusTypeDef status;
 104:Core/Src/main.c ****     int id = 0;
 105:Core/Src/main.c ****     char message[50];
 106:Core/Src/main.c ****     status = AccelGetId(&hi2c1, &id);
 107:Core/Src/main.c ****     if (status == HAL_OK)
 108:Core/Src/main.c ****     {
 109:Core/Src/main.c ****         sprintf(message, "ADXL345 ID is : %o\n", id);
 110:Core/Src/main.c ****         HAL_UART_Transmit(&huart2, (uint8_t *)&message, 20, 100);
 111:Core/Src/main.c ****     }
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****     /* USER CODE END 2 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****     /* Infinite loop */
 116:Core/Src/main.c ****     /* USER CODE BEGIN WHILE */
 117:Core/Src/main.c ****     while (1)
 118:Core/Src/main.c ****     {
 119:Core/Src/main.c ****         /* USER CODE END WHILE */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****         MX_X_CUBE_AI_Process();
 122:Core/Src/main.c ****         /* USER CODE BEGIN 3 */
 123:Core/Src/main.c ****     }
 124:Core/Src/main.c ****     /* USER CODE END 3 */
 125:Core/Src/main.c **** }
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** /**
 128:Core/Src/main.c ****   * @brief System Clock Configuration
 129:Core/Src/main.c ****   * @retval None
 130:Core/Src/main.c ****   */
 131:Core/Src/main.c **** void SystemClock_Config(void)
 132:Core/Src/main.c **** {
 133:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 134:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****     /** Configure the main internal regulator output voltage
 137:Core/Src/main.c ****   */
 138:Core/Src/main.c ****     __HAL_RCC_PWR_CLK_ENABLE();
 139:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 140:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 141:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 142:Core/Src/main.c ****   */
 143:Core/Src/main.c ****     RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 144:Core/Src/main.c ****     RCC_OscInitStruct.HSEState = RCC_HSE_ON;
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s 			page 4


 145:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 146:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 147:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM = 4;
 148:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN = 180;
 149:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 150:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ = 2;
 151:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLR = 2;
 152:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 153:Core/Src/main.c ****     {
 154:Core/Src/main.c ****         Error_Handler();
 155:Core/Src/main.c ****     }
 156:Core/Src/main.c ****     /** Activate the Over-Drive mode
 157:Core/Src/main.c ****   */
 158:Core/Src/main.c ****     if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 159:Core/Src/main.c ****     {
 160:Core/Src/main.c ****         Error_Handler();
 161:Core/Src/main.c ****     }
 162:Core/Src/main.c ****     /** Initializes the CPU, AHB and APB buses clocks
 163:Core/Src/main.c ****   */
 164:Core/Src/main.c ****     RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 |
 165:Core/Src/main.c ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 166:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 167:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 168:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****     if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 171:Core/Src/main.c ****     {
 172:Core/Src/main.c ****         Error_Handler();
 173:Core/Src/main.c ****     }
 174:Core/Src/main.c **** }
 175:Core/Src/main.c **** 
 176:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** /* USER CODE END 4 */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** /**
 181:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 182:Core/Src/main.c ****   * @retval None
 183:Core/Src/main.c ****   */
 184:Core/Src/main.c **** void Error_Handler(void)
 185:Core/Src/main.c **** {
  29              		.loc 1 185 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 186:Core/Src/main.c ****     /* USER CODE BEGIN Error_Handler_Debug */
 187:Core/Src/main.c ****     /* User can add his own implementation to report the HAL error return state */
 188:Core/Src/main.c ****     __disable_irq();
  35              		.loc 1 188 5 view .LVU1
  36              	.LBB4:
  37              	.LBI4:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s 			page 5


   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s 			page 6


  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s 			page 7


 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 140 27 view .LVU2
  40              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 142 3 view .LVU3
  42              		.syntax unified
  43              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE5:
  50              	.LBE4:
 189:Core/Src/main.c ****     while (1)
  51              		.loc 1 189 5 discriminator 1 view .LVU4
 190:Core/Src/main.c ****     {
 191:Core/Src/main.c ****     }
  52              		.loc 1 191 5 discriminator 1 view .LVU5
 189:Core/Src/main.c ****     while (1)
  53              		.loc 1 189 11 discriminator 1 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE132:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
  59              		.align	1
  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	SystemClock_Config:
  67              	.LFB131:
 132:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s 			page 8


  68              		.loc 1 132 1 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 80
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72 0000 00B5     		push	{lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 4
  75              		.cfi_offset 14, -4
  76 0002 95B0     		sub	sp, sp, #84
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 88
 133:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  79              		.loc 1 133 5 view .LVU8
 133:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  80              		.loc 1 133 24 is_stmt 0 view .LVU9
  81 0004 3422     		movs	r2, #52
  82 0006 0021     		movs	r1, #0
  83 0008 07A8     		add	r0, sp, #28
  84 000a FFF7FEFF 		bl	memset
  85              	.LVL0:
 134:Core/Src/main.c **** 
  86              		.loc 1 134 5 is_stmt 1 view .LVU10
 134:Core/Src/main.c **** 
  87              		.loc 1 134 24 is_stmt 0 view .LVU11
  88 000e 0023     		movs	r3, #0
  89 0010 0293     		str	r3, [sp, #8]
  90 0012 0393     		str	r3, [sp, #12]
  91 0014 0493     		str	r3, [sp, #16]
  92 0016 0593     		str	r3, [sp, #20]
  93 0018 0693     		str	r3, [sp, #24]
 138:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  94              		.loc 1 138 5 is_stmt 1 view .LVU12
  95              	.LBB6:
 138:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  96              		.loc 1 138 5 view .LVU13
  97 001a 0093     		str	r3, [sp]
 138:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  98              		.loc 1 138 5 view .LVU14
  99 001c 234A     		ldr	r2, .L11
 100 001e 116C     		ldr	r1, [r2, #64]
 101 0020 41F08051 		orr	r1, r1, #268435456
 102 0024 1164     		str	r1, [r2, #64]
 138:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 103              		.loc 1 138 5 view .LVU15
 104 0026 126C     		ldr	r2, [r2, #64]
 105 0028 02F08052 		and	r2, r2, #268435456
 106 002c 0092     		str	r2, [sp]
 138:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 107              		.loc 1 138 5 view .LVU16
 108 002e 009A     		ldr	r2, [sp]
 109              	.LBE6:
 138:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 110              		.loc 1 138 5 view .LVU17
 139:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 111              		.loc 1 139 5 view .LVU18
 112              	.LBB7:
 139:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s 			page 9


 113              		.loc 1 139 5 view .LVU19
 114 0030 0193     		str	r3, [sp, #4]
 139:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 115              		.loc 1 139 5 view .LVU20
 116 0032 1F4B     		ldr	r3, .L11+4
 117 0034 1A68     		ldr	r2, [r3]
 118 0036 42F44042 		orr	r2, r2, #49152
 119 003a 1A60     		str	r2, [r3]
 139:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 120              		.loc 1 139 5 view .LVU21
 121 003c 1B68     		ldr	r3, [r3]
 122 003e 03F44043 		and	r3, r3, #49152
 123 0042 0193     		str	r3, [sp, #4]
 139:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 124              		.loc 1 139 5 view .LVU22
 125 0044 019B     		ldr	r3, [sp, #4]
 126              	.LBE7:
 139:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 127              		.loc 1 139 5 view .LVU23
 143:Core/Src/main.c ****     RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 128              		.loc 1 143 5 view .LVU24
 143:Core/Src/main.c ****     RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 129              		.loc 1 143 38 is_stmt 0 view .LVU25
 130 0046 0123     		movs	r3, #1
 131 0048 0793     		str	r3, [sp, #28]
 144:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 132              		.loc 1 144 5 is_stmt 1 view .LVU26
 144:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 133              		.loc 1 144 32 is_stmt 0 view .LVU27
 134 004a 4FF48033 		mov	r3, #65536
 135 004e 0893     		str	r3, [sp, #32]
 145:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 136              		.loc 1 145 5 is_stmt 1 view .LVU28
 145:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 137              		.loc 1 145 36 is_stmt 0 view .LVU29
 138 0050 0223     		movs	r3, #2
 139 0052 0D93     		str	r3, [sp, #52]
 146:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM = 4;
 140              		.loc 1 146 5 is_stmt 1 view .LVU30
 146:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM = 4;
 141              		.loc 1 146 37 is_stmt 0 view .LVU31
 142 0054 4FF48002 		mov	r2, #4194304
 143 0058 0E92     		str	r2, [sp, #56]
 147:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN = 180;
 144              		.loc 1 147 5 is_stmt 1 view .LVU32
 147:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN = 180;
 145              		.loc 1 147 32 is_stmt 0 view .LVU33
 146 005a 0422     		movs	r2, #4
 147 005c 0F92     		str	r2, [sp, #60]
 148:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 148              		.loc 1 148 5 is_stmt 1 view .LVU34
 148:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 149              		.loc 1 148 32 is_stmt 0 view .LVU35
 150 005e B422     		movs	r2, #180
 151 0060 1092     		str	r2, [sp, #64]
 149:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ = 2;
 152              		.loc 1 149 5 is_stmt 1 view .LVU36
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s 			page 10


 149:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ = 2;
 153              		.loc 1 149 32 is_stmt 0 view .LVU37
 154 0062 1193     		str	r3, [sp, #68]
 150:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLR = 2;
 155              		.loc 1 150 5 is_stmt 1 view .LVU38
 150:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLR = 2;
 156              		.loc 1 150 32 is_stmt 0 view .LVU39
 157 0064 1293     		str	r3, [sp, #72]
 151:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 158              		.loc 1 151 5 is_stmt 1 view .LVU40
 151:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 159              		.loc 1 151 32 is_stmt 0 view .LVU41
 160 0066 1393     		str	r3, [sp, #76]
 152:Core/Src/main.c ****     {
 161              		.loc 1 152 5 is_stmt 1 view .LVU42
 152:Core/Src/main.c ****     {
 162              		.loc 1 152 9 is_stmt 0 view .LVU43
 163 0068 07A8     		add	r0, sp, #28
 164 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 165              	.LVL1:
 152:Core/Src/main.c ****     {
 166              		.loc 1 152 8 view .LVU44
 167 006e B0B9     		cbnz	r0, .L8
 158:Core/Src/main.c ****     {
 168              		.loc 1 158 5 is_stmt 1 view .LVU45
 158:Core/Src/main.c ****     {
 169              		.loc 1 158 9 is_stmt 0 view .LVU46
 170 0070 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 171              	.LVL2:
 158:Core/Src/main.c ****     {
 172              		.loc 1 158 8 view .LVU47
 173 0074 A8B9     		cbnz	r0, .L9
 164:Core/Src/main.c ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 174              		.loc 1 164 5 is_stmt 1 view .LVU48
 164:Core/Src/main.c ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 175              		.loc 1 164 33 is_stmt 0 view .LVU49
 176 0076 0F23     		movs	r3, #15
 177 0078 0293     		str	r3, [sp, #8]
 165:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 178              		.loc 1 165 5 is_stmt 1 view .LVU50
 165:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 179              		.loc 1 165 36 is_stmt 0 view .LVU51
 180 007a 0223     		movs	r3, #2
 181 007c 0393     		str	r3, [sp, #12]
 166:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 182              		.loc 1 166 5 is_stmt 1 view .LVU52
 166:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 183              		.loc 1 166 37 is_stmt 0 view .LVU53
 184 007e 0023     		movs	r3, #0
 185 0080 0493     		str	r3, [sp, #16]
 167:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 186              		.loc 1 167 5 is_stmt 1 view .LVU54
 167:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 187              		.loc 1 167 38 is_stmt 0 view .LVU55
 188 0082 4FF4A053 		mov	r3, #5120
 189 0086 0593     		str	r3, [sp, #20]
 168:Core/Src/main.c **** 
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s 			page 11


 190              		.loc 1 168 5 is_stmt 1 view .LVU56
 168:Core/Src/main.c **** 
 191              		.loc 1 168 38 is_stmt 0 view .LVU57
 192 0088 4FF48053 		mov	r3, #4096
 193 008c 0693     		str	r3, [sp, #24]
 170:Core/Src/main.c ****     {
 194              		.loc 1 170 5 is_stmt 1 view .LVU58
 170:Core/Src/main.c ****     {
 195              		.loc 1 170 9 is_stmt 0 view .LVU59
 196 008e 0521     		movs	r1, #5
 197 0090 02A8     		add	r0, sp, #8
 198 0092 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 199              	.LVL3:
 170:Core/Src/main.c ****     {
 200              		.loc 1 170 8 view .LVU60
 201 0096 30B9     		cbnz	r0, .L10
 174:Core/Src/main.c **** 
 202              		.loc 1 174 1 view .LVU61
 203 0098 15B0     		add	sp, sp, #84
 204              	.LCFI2:
 205              		.cfi_remember_state
 206              		.cfi_def_cfa_offset 4
 207              		@ sp needed
 208 009a 5DF804FB 		ldr	pc, [sp], #4
 209              	.L8:
 210              	.LCFI3:
 211              		.cfi_restore_state
 154:Core/Src/main.c ****     }
 212              		.loc 1 154 9 is_stmt 1 view .LVU62
 213 009e FFF7FEFF 		bl	Error_Handler
 214              	.LVL4:
 215              	.L9:
 160:Core/Src/main.c ****     }
 216              		.loc 1 160 9 view .LVU63
 217 00a2 FFF7FEFF 		bl	Error_Handler
 218              	.LVL5:
 219              	.L10:
 172:Core/Src/main.c ****     }
 220              		.loc 1 172 9 view .LVU64
 221 00a6 FFF7FEFF 		bl	Error_Handler
 222              	.LVL6:
 223              	.L12:
 224 00aa 00BF     		.align	2
 225              	.L11:
 226 00ac 00380240 		.word	1073887232
 227 00b0 00700040 		.word	1073770496
 228              		.cfi_endproc
 229              	.LFE131:
 231              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 232              		.align	2
 233              	.LC0:
 234 0000 496E6974 		.ascii	"Initialing of UART module completed!\012\000"
 234      69616C69 
 234      6E67206F 
 234      66205541 
 234      5254206D 
 235 0026 0000     		.align	2
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s 			page 12


 236              	.LC1:
 237 0028 496E6974 		.ascii	"Initialing of I2C module completed!\012\000"
 237      69616C69 
 237      6E67206F 
 237      66204932 
 237      43206D6F 
 238 004d 000000   		.align	2
 239              	.LC2:
 240 0050 4144584C 		.ascii	"ADXL345 ID is : %o\012\000"
 240      33343520 
 240      49442069 
 240      73203A20 
 240      256F0A00 
 241              		.section	.text.main,"ax",%progbits
 242              		.align	1
 243              		.global	main
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu fpv4-sp-d16
 249              	main:
 250              	.LFB130:
  69:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 251              		.loc 1 69 1 view -0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 56
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255 0000 30B5     		push	{r4, r5, lr}
 256              	.LCFI4:
 257              		.cfi_def_cfa_offset 12
 258              		.cfi_offset 4, -12
 259              		.cfi_offset 5, -8
 260              		.cfi_offset 14, -4
 261 0002 8FB0     		sub	sp, sp, #60
 262              	.LCFI5:
 263              		.cfi_def_cfa_offset 72
  77:Core/Src/main.c **** 
 264              		.loc 1 77 5 view .LVU66
 265 0004 FFF7FEFF 		bl	HAL_Init
 266              	.LVL7:
  84:Core/Src/main.c **** 
 267              		.loc 1 84 5 view .LVU67
 268 0008 FFF7FEFF 		bl	SystemClock_Config
 269              	.LVL8:
  91:Core/Src/main.c ****     MX_CRC_Init();
 270              		.loc 1 91 5 view .LVU68
 271 000c FFF7FEFF 		bl	MX_GPIO_Init
 272              	.LVL9:
  92:Core/Src/main.c ****     MX_I2C1_Init();
 273              		.loc 1 92 5 view .LVU69
 274 0010 FFF7FEFF 		bl	MX_CRC_Init
 275              	.LVL10:
  93:Core/Src/main.c ****     MX_X_CUBE_AI_Init();
 276              		.loc 1 93 5 view .LVU70
 277 0014 FFF7FEFF 		bl	MX_I2C1_Init
 278              	.LVL11:
  94:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s 			page 13


 279              		.loc 1 94 5 view .LVU71
 280 0018 FFF7FEFF 		bl	MX_X_CUBE_AI_Init
 281              	.LVL12:
  96:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)"Initialing of UART module completed!\n", 37, 100);
 282              		.loc 1 96 5 view .LVU72
 283 001c FFF7FEFF 		bl	MX_USART2_UART_Init
 284              	.LVL13:
  97:Core/Src/main.c ****     AccelInit(&hi2c1);
 285              		.loc 1 97 5 view .LVU73
 286 0020 154D     		ldr	r5, .L18
 287 0022 6423     		movs	r3, #100
 288 0024 2522     		movs	r2, #37
 289 0026 1549     		ldr	r1, .L18+4
 290 0028 2846     		mov	r0, r5
 291 002a FFF7FEFF 		bl	HAL_UART_Transmit
 292              	.LVL14:
  98:Core/Src/main.c ****     setTargetDeviceAddress(&hi2c1, 0x53 << 1);
 293              		.loc 1 98 5 view .LVU74
 294 002e 144C     		ldr	r4, .L18+8
 295 0030 2046     		mov	r0, r4
 296 0032 FFF7FEFF 		bl	AccelInit
 297              	.LVL15:
  99:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)"Initialing of I2C module completed!\n", 36, 100);
 298              		.loc 1 99 5 view .LVU75
 299 0036 A621     		movs	r1, #166
 300 0038 2046     		mov	r0, r4
 301 003a FFF7FEFF 		bl	setTargetDeviceAddress
 302              	.LVL16:
 100:Core/Src/main.c **** 
 303              		.loc 1 100 5 view .LVU76
 304 003e 6423     		movs	r3, #100
 305 0040 2422     		movs	r2, #36
 306 0042 1049     		ldr	r1, .L18+12
 307 0044 2846     		mov	r0, r5
 308 0046 FFF7FEFF 		bl	HAL_UART_Transmit
 309              	.LVL17:
 103:Core/Src/main.c ****     int id = 0;
 310              		.loc 1 103 5 view .LVU77
 104:Core/Src/main.c ****     char message[50];
 311              		.loc 1 104 5 view .LVU78
 104:Core/Src/main.c ****     char message[50];
 312              		.loc 1 104 9 is_stmt 0 view .LVU79
 313 004a 0023     		movs	r3, #0
 314 004c 0D93     		str	r3, [sp, #52]
 105:Core/Src/main.c ****     status = AccelGetId(&hi2c1, &id);
 315              		.loc 1 105 5 is_stmt 1 view .LVU80
 106:Core/Src/main.c ****     if (status == HAL_OK)
 316              		.loc 1 106 5 view .LVU81
 106:Core/Src/main.c ****     if (status == HAL_OK)
 317              		.loc 1 106 14 is_stmt 0 view .LVU82
 318 004e 0DA9     		add	r1, sp, #52
 319 0050 2046     		mov	r0, r4
 320 0052 FFF7FEFF 		bl	AccelGetId
 321              	.LVL18:
 107:Core/Src/main.c ****     {
 322              		.loc 1 107 5 is_stmt 1 view .LVU83
 107:Core/Src/main.c ****     {
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s 			page 14


 323              		.loc 1 107 8 is_stmt 0 view .LVU84
 324 0056 10B1     		cbz	r0, .L17
 325              	.LVL19:
 326              	.L15:
 117:Core/Src/main.c ****     {
 327              		.loc 1 117 5 is_stmt 1 discriminator 1 view .LVU85
 121:Core/Src/main.c ****         /* USER CODE BEGIN 3 */
 328              		.loc 1 121 9 discriminator 1 view .LVU86
 329 0058 FFF7FEFF 		bl	MX_X_CUBE_AI_Process
 330              	.LVL20:
 117:Core/Src/main.c ****     {
 331              		.loc 1 117 11 discriminator 1 view .LVU87
 332 005c FCE7     		b	.L15
 333              	.LVL21:
 334              	.L17:
 335              	.LBB8:
 109:Core/Src/main.c ****         HAL_UART_Transmit(&huart2, (uint8_t *)&message, 20, 100);
 336              		.loc 1 109 9 view .LVU88
 337 005e 0D9A     		ldr	r2, [sp, #52]
 338 0060 0949     		ldr	r1, .L18+16
 339 0062 6846     		mov	r0, sp
 340              	.LVL22:
 109:Core/Src/main.c ****         HAL_UART_Transmit(&huart2, (uint8_t *)&message, 20, 100);
 341              		.loc 1 109 9 is_stmt 0 view .LVU89
 342 0064 FFF7FEFF 		bl	sprintf
 343              	.LVL23:
 110:Core/Src/main.c ****     }
 344              		.loc 1 110 9 is_stmt 1 view .LVU90
 345 0068 6423     		movs	r3, #100
 346 006a 1422     		movs	r2, #20
 347 006c 6946     		mov	r1, sp
 348 006e 2846     		mov	r0, r5
 349 0070 FFF7FEFF 		bl	HAL_UART_Transmit
 350              	.LVL24:
 351 0074 F0E7     		b	.L15
 352              	.L19:
 353 0076 00BF     		.align	2
 354              	.L18:
 355 0078 00000000 		.word	huart2
 356 007c 00000000 		.word	.LC0
 357 0080 00000000 		.word	hi2c1
 358 0084 28000000 		.word	.LC1
 359 0088 50000000 		.word	.LC2
 360              	.LBE8:
 361              		.cfi_endproc
 362              	.LFE130:
 364              		.text
 365              	.Letext0:
 366              		.file 3 "c:\\gnu\\gnu_arm_embedded_toolchain\\10-2020-q4-major\\arm-none-eabi\\include\\machine\\_
 367              		.file 4 "c:\\gnu\\gnu_arm_embedded_toolchain\\10-2020-q4-major\\arm-none-eabi\\include\\sys\\_stdi
 368              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 369              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 370              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 371              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 372              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 373              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 374              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s 			page 15


 375              		.file 12 "Core/Inc/i2c.h"
 376              		.file 13 "Core/Inc/usart.h"
 377              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr_ex.h"
 378              		.file 15 "<built-in>"
 379              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 380              		.file 17 "Core/Inc/gpio.h"
 381              		.file 18 "Core/Inc/crc.h"
 382              		.file 19 "X-CUBE-AI/App/app_x-cube-ai.h"
 383              		.file 20 "Core/Inc/adxl345.h"
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s:18     .text.Error_Handler:00000000 $t
C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s:26     .text.Error_Handler:00000000 Error_Handler
C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s:59     .text.SystemClock_Config:00000000 $t
C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s:66     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s:226    .text.SystemClock_Config:000000ac $d
C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s:232    .rodata.main.str1.4:00000000 $d
C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s:242    .text.main:00000000 $t
C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s:249    .text.main:00000000 main
C:\Users\zacfi\AppData\Local\Temp\ccANmBXt.s:355    .text.main:00000078 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_CRC_Init
MX_I2C1_Init
MX_X_CUBE_AI_Init
MX_USART2_UART_Init
HAL_UART_Transmit
AccelInit
setTargetDeviceAddress
AccelGetId
MX_X_CUBE_AI_Process
sprintf
huart2
hi2c1
