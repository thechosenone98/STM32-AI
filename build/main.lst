ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_UART_RxCpltCallback
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_UART_RxCpltCallback:
  27              	.LVL0:
  28              	.LFB135:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "dma.h"
  23:Core/Src/main.c **** #include "i2c.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include "adxl345.h"
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s 			page 2


  30:Core/Src/main.c **** #include <stdio.h>
  31:Core/Src/main.c **** #include <string.h>
  32:Core/Src/main.c **** /* USER CODE END Includes */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** #define UART2_BUFFER_SIZE 4
  42:Core/Src/main.c **** /* USER CODE END PD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE BEGIN PV */
  52:Core/Src/main.c **** uint8_t UART2_rxBuffer[UART2_BUFFER_SIZE];
  53:Core/Src/main.c **** /* USER CODE END PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  56:Core/Src/main.c **** void SystemClock_Config(void);
  57:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  62:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE END 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /**
  67:Core/Src/main.c ****   * @brief  The application entry point.
  68:Core/Src/main.c ****   * @retval int
  69:Core/Src/main.c ****   */
  70:Core/Src/main.c **** int main(void)
  71:Core/Src/main.c **** {
  72:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* USER CODE END 1 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  79:Core/Src/main.c ****   HAL_Init();
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  86:Core/Src/main.c **** 
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s 			page 3


  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END SysInit */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  93:Core/Src/main.c ****   MX_DMA_Init();
  94:Core/Src/main.c ****   MX_I2C1_Init();
  95:Core/Src/main.c ****   MX_USART2_UART_Init();
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  97:Core/Src/main.c ****   //Initialize the DMA callback (will be called when we receive an instruction from the PC on UART)
  98:Core/Src/main.c ****   HAL_UART_Receive_DMA(&huart2, UART2_rxBuffer, UART2_BUFFER_SIZE);
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   setTargetDeviceAddress(&hi2c1, 0x53<<1);
 101:Core/Src/main.c ****   
 102:Core/Src/main.c ****   char message[256];
 103:Core/Src/main.c ****   HAL_StatusTypeDef status;
 104:Core/Src/main.c ****   int id = 0;
 105:Core/Src/main.c ****   Accelerations accelerometerData;
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   //Initialize the module
 108:Core/Src/main.c ****   status = AccelInit(&hi2c1);
 109:Core/Src/main.c ****   if(status == HAL_OK)
 110:Core/Src/main.c ****   {
 111:Core/Src/main.c ****     sprintf(message, "ADXL345 Module has been initialized successfully!\n");
 112:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)&message, 50, 100);
 113:Core/Src/main.c ****   }
 114:Core/Src/main.c ****   else
 115:Core/Src/main.c ****   {
 116:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)"ERROR!\n", 7, 100);
 117:Core/Src/main.c ****   }
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   //Get ID of Accelerometer module (ensures the connection is working correctly)
 120:Core/Src/main.c ****   status = AccelGetId(&hi2c1, &id);
 121:Core/Src/main.c ****   if(status == HAL_OK)
 122:Core/Src/main.c ****   {
 123:Core/Src/main.c ****     sprintf(message, "ADXL345 ID is : %o\n", id);
 124:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)&message, 20, 100);
 125:Core/Src/main.c ****   }
 126:Core/Src/main.c ****   else
 127:Core/Src/main.c ****   {
 128:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)"ERROR!\n", 7, 100);
 129:Core/Src/main.c ****   }
 130:Core/Src/main.c ****   /* USER CODE END 2 */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* Infinite loop */
 133:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 134:Core/Src/main.c ****   while (1)
 135:Core/Src/main.c ****   {
 136:Core/Src/main.c ****     HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
 137:Core/Src/main.c ****     status = getAccelerations(&hi2c1, &accelerometerData);
 138:Core/Src/main.c ****     if(status == HAL_OK){
 139:Core/Src/main.c ****       memset(message, 0, sizeof(message));
 140:Core/Src/main.c ****       float xf = (float)accelerometerData.x * 3.9f / 1000.0;
 141:Core/Src/main.c ****       float yf = (float)accelerometerData.y * 3.9f / 1000.0;
 142:Core/Src/main.c ****       float zf = (float)accelerometerData.z * 3.9f / 1000.0;
 143:Core/Src/main.c ****       sprintf(message, "X : %5.5f    Y : %5.5f    Z : %5.5f\n", xf, yf, zf);
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s 			page 4


 144:Core/Src/main.c ****       HAL_UART_Transmit(&huart2, (uint8_t *)message, 70, 100);
 145:Core/Src/main.c ****     }
 146:Core/Src/main.c ****     else
 147:Core/Src/main.c ****     {
 148:Core/Src/main.c ****       sprintf(message, "Error!\n");
 149:Core/Src/main.c ****       HAL_UART_Transmit(&huart2, (uint8_t *)message, 7, 100);
 150:Core/Src/main.c ****     }
 151:Core/Src/main.c ****     HAL_Delay(100);
 152:Core/Src/main.c ****   }
 153:Core/Src/main.c ****     /* USER CODE END WHILE */
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 156:Core/Src/main.c ****   /* USER CODE END 3 */
 157:Core/Src/main.c **** }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /**
 160:Core/Src/main.c ****   * @brief System Clock Configuration
 161:Core/Src/main.c ****   * @retval None
 162:Core/Src/main.c ****   */
 163:Core/Src/main.c **** void SystemClock_Config(void)
 164:Core/Src/main.c **** {
 165:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 166:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 169:Core/Src/main.c ****   */
 170:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 171:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 172:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 173:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 174:Core/Src/main.c ****   */
 175:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 176:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 177:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 185:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 186:Core/Src/main.c ****   {
 187:Core/Src/main.c ****     Error_Handler();
 188:Core/Src/main.c ****   }
 189:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 190:Core/Src/main.c ****   */
 191:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 192:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 193:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 194:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 195:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 196:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 199:Core/Src/main.c ****   {
 200:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s 			page 5


 201:Core/Src/main.c ****   }
 202:Core/Src/main.c **** }
 203:Core/Src/main.c **** 
 204:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** // This function is called when the UART2_rxBuffer gets full
 207:Core/Src/main.c **** // we can than check it's content to know which command was sent to us
 208:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 209:Core/Src/main.c **** {
  30              		.loc 1 209 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 209 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 210:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, UART2_rxBuffer, UART2_BUFFER_SIZE, 100);
  40              		.loc 1 210 5 is_stmt 1 view .LVU2
  41 0002 6423     		movs	r3, #100
  42 0004 0422     		movs	r2, #4
  43 0006 0249     		ldr	r1, .L3
  44 0008 0248     		ldr	r0, .L3+4
  45              	.LVL1:
  46              		.loc 1 210 5 is_stmt 0 view .LVU3
  47 000a FFF7FEFF 		bl	HAL_UART_Transmit
  48              	.LVL2:
 211:Core/Src/main.c **** }
  49              		.loc 1 211 1 view .LVU4
  50 000e 08BD     		pop	{r3, pc}
  51              	.L4:
  52              		.align	2
  53              	.L3:
  54 0010 00000000 		.word	.LANCHOR0
  55 0014 00000000 		.word	huart2
  56              		.cfi_endproc
  57              	.LFE135:
  59              		.section	.text.Error_Handler,"ax",%progbits
  60              		.align	1
  61              		.global	Error_Handler
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv4-sp-d16
  67              	Error_Handler:
  68              	.LFB136:
 212:Core/Src/main.c **** 
 213:Core/Src/main.c **** /* USER CODE END 4 */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** /**
 216:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 217:Core/Src/main.c ****   * @retval None
 218:Core/Src/main.c ****   */
 219:Core/Src/main.c **** void Error_Handler(void)
 220:Core/Src/main.c **** {
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s 			page 6


  69              		.loc 1 220 1 is_stmt 1 view -0
  70              		.cfi_startproc
  71              		@ Volatile: function does not return.
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
 221:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 222:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 223:Core/Src/main.c ****   __disable_irq();
  75              		.loc 1 223 3 view .LVU6
  76              	.LBB4:
  77              	.LBI4:
  78              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s 			page 7


  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s 			page 8


 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  79              		.loc 2 140 27 view .LVU7
  80              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  81              		.loc 2 142 3 view .LVU8
  82              		.syntax unified
  83              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  84 0000 72B6     		cpsid i
  85              	@ 0 "" 2
  86              		.thumb
  87              		.syntax unified
  88              	.L6:
  89              	.LBE5:
  90              	.LBE4:
 224:Core/Src/main.c ****   while (1)
  91              		.loc 1 224 3 discriminator 1 view .LVU9
 225:Core/Src/main.c ****   {
 226:Core/Src/main.c ****   }
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s 			page 9


  92              		.loc 1 226 3 discriminator 1 view .LVU10
 224:Core/Src/main.c ****   while (1)
  93              		.loc 1 224 9 discriminator 1 view .LVU11
  94 0002 FEE7     		b	.L6
  95              		.cfi_endproc
  96              	.LFE136:
  98              		.section	.text.SystemClock_Config,"ax",%progbits
  99              		.align	1
 100              		.global	SystemClock_Config
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 104              		.fpu fpv4-sp-d16
 106              	SystemClock_Config:
 107              	.LFB134:
 164:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 108              		.loc 1 164 1 view -0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 80
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112 0000 00B5     		push	{lr}
 113              	.LCFI1:
 114              		.cfi_def_cfa_offset 4
 115              		.cfi_offset 14, -4
 116 0002 95B0     		sub	sp, sp, #84
 117              	.LCFI2:
 118              		.cfi_def_cfa_offset 88
 165:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 119              		.loc 1 165 3 view .LVU13
 165:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 120              		.loc 1 165 22 is_stmt 0 view .LVU14
 121 0004 3422     		movs	r2, #52
 122 0006 0021     		movs	r1, #0
 123 0008 07A8     		add	r0, sp, #28
 124 000a FFF7FEFF 		bl	memset
 125              	.LVL3:
 166:Core/Src/main.c **** 
 126              		.loc 1 166 3 is_stmt 1 view .LVU15
 166:Core/Src/main.c **** 
 127              		.loc 1 166 22 is_stmt 0 view .LVU16
 128 000e 0023     		movs	r3, #0
 129 0010 0293     		str	r3, [sp, #8]
 130 0012 0393     		str	r3, [sp, #12]
 131 0014 0493     		str	r3, [sp, #16]
 132 0016 0593     		str	r3, [sp, #20]
 133 0018 0693     		str	r3, [sp, #24]
 170:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 134              		.loc 1 170 3 is_stmt 1 view .LVU17
 135              	.LBB6:
 170:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 136              		.loc 1 170 3 view .LVU18
 137 001a 0093     		str	r3, [sp]
 170:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 138              		.loc 1 170 3 view .LVU19
 139 001c 1F4A     		ldr	r2, .L13
 140 001e 116C     		ldr	r1, [r2, #64]
 141 0020 41F08051 		orr	r1, r1, #268435456
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s 			page 10


 142 0024 1164     		str	r1, [r2, #64]
 170:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 143              		.loc 1 170 3 view .LVU20
 144 0026 126C     		ldr	r2, [r2, #64]
 145 0028 02F08052 		and	r2, r2, #268435456
 146 002c 0092     		str	r2, [sp]
 170:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 147              		.loc 1 170 3 view .LVU21
 148 002e 009A     		ldr	r2, [sp]
 149              	.LBE6:
 170:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 150              		.loc 1 170 3 view .LVU22
 171:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 151              		.loc 1 171 3 view .LVU23
 152              	.LBB7:
 171:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 153              		.loc 1 171 3 view .LVU24
 154 0030 0193     		str	r3, [sp, #4]
 171:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 155              		.loc 1 171 3 view .LVU25
 156 0032 1B49     		ldr	r1, .L13+4
 157 0034 0A68     		ldr	r2, [r1]
 158 0036 22F44042 		bic	r2, r2, #49152
 159 003a 42F48042 		orr	r2, r2, #16384
 160 003e 0A60     		str	r2, [r1]
 171:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 161              		.loc 1 171 3 view .LVU26
 162 0040 0A68     		ldr	r2, [r1]
 163 0042 02F44042 		and	r2, r2, #49152
 164 0046 0192     		str	r2, [sp, #4]
 171:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 165              		.loc 1 171 3 view .LVU27
 166 0048 019A     		ldr	r2, [sp, #4]
 167              	.LBE7:
 171:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 168              		.loc 1 171 3 view .LVU28
 175:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 169              		.loc 1 175 3 view .LVU29
 175:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 170              		.loc 1 175 36 is_stmt 0 view .LVU30
 171 004a 0222     		movs	r2, #2
 172 004c 0792     		str	r2, [sp, #28]
 176:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 173              		.loc 1 176 3 is_stmt 1 view .LVU31
 176:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 174              		.loc 1 176 30 is_stmt 0 view .LVU32
 175 004e 0121     		movs	r1, #1
 176 0050 0A91     		str	r1, [sp, #40]
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 177              		.loc 1 177 3 is_stmt 1 view .LVU33
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 178              		.loc 1 177 41 is_stmt 0 view .LVU34
 179 0052 1021     		movs	r1, #16
 180 0054 0B91     		str	r1, [sp, #44]
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 181              		.loc 1 178 3 is_stmt 1 view .LVU35
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s 			page 11


 182              		.loc 1 178 34 is_stmt 0 view .LVU36
 183 0056 0D92     		str	r2, [sp, #52]
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 184              		.loc 1 179 3 is_stmt 1 view .LVU37
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 185              		.loc 1 179 35 is_stmt 0 view .LVU38
 186 0058 0E93     		str	r3, [sp, #56]
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 187              		.loc 1 180 3 is_stmt 1 view .LVU39
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 188              		.loc 1 180 30 is_stmt 0 view .LVU40
 189 005a 0F91     		str	r1, [sp, #60]
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 190              		.loc 1 181 3 is_stmt 1 view .LVU41
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 191              		.loc 1 181 30 is_stmt 0 view .LVU42
 192 005c 4FF4A873 		mov	r3, #336
 193 0060 1093     		str	r3, [sp, #64]
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 194              		.loc 1 182 3 is_stmt 1 view .LVU43
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 195              		.loc 1 182 30 is_stmt 0 view .LVU44
 196 0062 0423     		movs	r3, #4
 197 0064 1193     		str	r3, [sp, #68]
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 198              		.loc 1 183 3 is_stmt 1 view .LVU45
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 199              		.loc 1 183 30 is_stmt 0 view .LVU46
 200 0066 1292     		str	r2, [sp, #72]
 184:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 201              		.loc 1 184 3 is_stmt 1 view .LVU47
 184:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 202              		.loc 1 184 30 is_stmt 0 view .LVU48
 203 0068 1392     		str	r2, [sp, #76]
 185:Core/Src/main.c ****   {
 204              		.loc 1 185 3 is_stmt 1 view .LVU49
 185:Core/Src/main.c ****   {
 205              		.loc 1 185 7 is_stmt 0 view .LVU50
 206 006a 07A8     		add	r0, sp, #28
 207 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 208              	.LVL4:
 185:Core/Src/main.c ****   {
 209              		.loc 1 185 6 view .LVU51
 210 0070 80B9     		cbnz	r0, .L11
 191:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 211              		.loc 1 191 3 is_stmt 1 view .LVU52
 191:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 212              		.loc 1 191 31 is_stmt 0 view .LVU53
 213 0072 0F23     		movs	r3, #15
 214 0074 0293     		str	r3, [sp, #8]
 193:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 215              		.loc 1 193 3 is_stmt 1 view .LVU54
 193:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 216              		.loc 1 193 34 is_stmt 0 view .LVU55
 217 0076 0221     		movs	r1, #2
 218 0078 0391     		str	r1, [sp, #12]
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s 			page 12


 219              		.loc 1 194 3 is_stmt 1 view .LVU56
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 220              		.loc 1 194 35 is_stmt 0 view .LVU57
 221 007a 0023     		movs	r3, #0
 222 007c 0493     		str	r3, [sp, #16]
 195:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 223              		.loc 1 195 3 is_stmt 1 view .LVU58
 195:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 224              		.loc 1 195 36 is_stmt 0 view .LVU59
 225 007e 4FF48052 		mov	r2, #4096
 226 0082 0592     		str	r2, [sp, #20]
 196:Core/Src/main.c **** 
 227              		.loc 1 196 3 is_stmt 1 view .LVU60
 196:Core/Src/main.c **** 
 228              		.loc 1 196 36 is_stmt 0 view .LVU61
 229 0084 0693     		str	r3, [sp, #24]
 198:Core/Src/main.c ****   {
 230              		.loc 1 198 3 is_stmt 1 view .LVU62
 198:Core/Src/main.c ****   {
 231              		.loc 1 198 7 is_stmt 0 view .LVU63
 232 0086 02A8     		add	r0, sp, #8
 233 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 234              	.LVL5:
 198:Core/Src/main.c ****   {
 235              		.loc 1 198 6 view .LVU64
 236 008c 20B9     		cbnz	r0, .L12
 202:Core/Src/main.c **** 
 237              		.loc 1 202 1 view .LVU65
 238 008e 15B0     		add	sp, sp, #84
 239              	.LCFI3:
 240              		.cfi_remember_state
 241              		.cfi_def_cfa_offset 4
 242              		@ sp needed
 243 0090 5DF804FB 		ldr	pc, [sp], #4
 244              	.L11:
 245              	.LCFI4:
 246              		.cfi_restore_state
 187:Core/Src/main.c ****   }
 247              		.loc 1 187 5 is_stmt 1 view .LVU66
 248 0094 FFF7FEFF 		bl	Error_Handler
 249              	.LVL6:
 250              	.L12:
 200:Core/Src/main.c ****   }
 251              		.loc 1 200 5 view .LVU67
 252 0098 FFF7FEFF 		bl	Error_Handler
 253              	.LVL7:
 254              	.L14:
 255              		.align	2
 256              	.L13:
 257 009c 00380240 		.word	1073887232
 258 00a0 00700040 		.word	1073770496
 259              		.cfi_endproc
 260              	.LFE134:
 262              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 263              		.align	2
 264              	.LC0:
 265 0000 4144584C 		.ascii	"ADXL345 Module has been initialized successfully!\012"
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s 			page 13


 265      33343520 
 265      4D6F6475 
 265      6C652068 
 265      61732062 
 266 0032 00       		.ascii	"\000"
 267 0033 00       		.align	2
 268              	.LC1:
 269 0034 4552524F 		.ascii	"ERROR!\012\000"
 269      52210A00 
 270              		.align	2
 271              	.LC2:
 272 003c 4144584C 		.ascii	"ADXL345 ID is : %o\012\000"
 272      33343520 
 272      49442069 
 272      73203A20 
 272      256F0A00 
 273              		.global	__aeabi_f2d
 274              		.align	2
 275              	.LC3:
 276 0050 58203A20 		.ascii	"X : %5.5f    Y : %5.5f    Z : %5.5f\012\000"
 276      25352E35 
 276      66202020 
 276      2059203A 
 276      2025352E 
 277 0075 000000   		.align	2
 278              	.LC4:
 279 0078 4572726F 		.ascii	"Error!\012\000"
 279      72210A00 
 280              		.section	.text.main,"ax",%progbits
 281              		.align	1
 282              		.global	main
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 286              		.fpu fpv4-sp-d16
 288              	main:
 289              	.LFB133:
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 290              		.loc 1 71 1 view -0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 272
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294 0000 30B5     		push	{r4, r5, lr}
 295              	.LCFI5:
 296              		.cfi_def_cfa_offset 12
 297              		.cfi_offset 4, -12
 298              		.cfi_offset 5, -8
 299              		.cfi_offset 14, -4
 300 0002 2DED028B 		vpush.64	{d8}
 301              	.LCFI6:
 302              		.cfi_def_cfa_offset 20
 303              		.cfi_offset 80, -20
 304              		.cfi_offset 81, -16
 305 0006 C9B0     		sub	sp, sp, #292
 306              	.LCFI7:
 307              		.cfi_def_cfa_offset 312
  79:Core/Src/main.c **** 
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s 			page 14


 308              		.loc 1 79 3 view .LVU69
 309 0008 FFF7FEFF 		bl	HAL_Init
 310              	.LVL8:
  85:Core/Src/main.c **** 
 311              		.loc 1 85 3 view .LVU70
 312 000c FFF7FEFF 		bl	SystemClock_Config
 313              	.LVL9:
  92:Core/Src/main.c ****   MX_DMA_Init();
 314              		.loc 1 92 3 view .LVU71
 315 0010 FFF7FEFF 		bl	MX_GPIO_Init
 316              	.LVL10:
  93:Core/Src/main.c ****   MX_I2C1_Init();
 317              		.loc 1 93 3 view .LVU72
 318 0014 FFF7FEFF 		bl	MX_DMA_Init
 319              	.LVL11:
  94:Core/Src/main.c ****   MX_USART2_UART_Init();
 320              		.loc 1 94 3 view .LVU73
 321 0018 FFF7FEFF 		bl	MX_I2C1_Init
 322              	.LVL12:
  95:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 323              		.loc 1 95 3 view .LVU74
 324 001c FFF7FEFF 		bl	MX_USART2_UART_Init
 325              	.LVL13:
  98:Core/Src/main.c **** 
 326              		.loc 1 98 3 view .LVU75
 327 0020 0422     		movs	r2, #4
 328 0022 5049     		ldr	r1, .L25
 329 0024 5048     		ldr	r0, .L25+4
 330 0026 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 331              	.LVL14:
 100:Core/Src/main.c ****   
 332              		.loc 1 100 3 view .LVU76
 333 002a 504C     		ldr	r4, .L25+8
 334 002c A621     		movs	r1, #166
 335 002e 2046     		mov	r0, r4
 336 0030 FFF7FEFF 		bl	setTargetDeviceAddress
 337              	.LVL15:
 102:Core/Src/main.c ****   HAL_StatusTypeDef status;
 338              		.loc 1 102 3 view .LVU77
 103:Core/Src/main.c ****   int id = 0;
 339              		.loc 1 103 3 view .LVU78
 104:Core/Src/main.c ****   Accelerations accelerometerData;
 340              		.loc 1 104 3 view .LVU79
 104:Core/Src/main.c ****   Accelerations accelerometerData;
 341              		.loc 1 104 7 is_stmt 0 view .LVU80
 342 0034 0023     		movs	r3, #0
 343 0036 0793     		str	r3, [sp, #28]
 105:Core/Src/main.c **** 
 344              		.loc 1 105 3 is_stmt 1 view .LVU81
 108:Core/Src/main.c ****   if(status == HAL_OK)
 345              		.loc 1 108 3 view .LVU82
 108:Core/Src/main.c ****   if(status == HAL_OK)
 346              		.loc 1 108 12 is_stmt 0 view .LVU83
 347 0038 2046     		mov	r0, r4
 348 003a FFF7FEFF 		bl	AccelInit
 349              	.LVL16:
 109:Core/Src/main.c ****   {
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s 			page 15


 350              		.loc 1 109 3 is_stmt 1 view .LVU84
 109:Core/Src/main.c ****   {
 351              		.loc 1 109 5 is_stmt 0 view .LVU85
 352 003e 18BB     		cbnz	r0, .L16
 111:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)&message, 50, 100);
 353              		.loc 1 111 5 is_stmt 1 view .LVU86
 354 0040 08AC     		add	r4, sp, #32
 355 0042 4B4D     		ldr	r5, .L25+12
 356 0044 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 357              	.LVL17:
 111:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)&message, 50, 100);
 358              		.loc 1 111 5 is_stmt 0 view .LVU87
 359 0046 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 360 0048 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 361 004a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 362 004c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 363 004e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 364 0050 2B68     		ldr	r3, [r5]
 365 0052 24F8023B 		strh	r3, [r4], #2	@ movhi
 366 0056 1B0C     		lsrs	r3, r3, #16
 367 0058 2370     		strb	r3, [r4]
 112:Core/Src/main.c ****   }
 368              		.loc 1 112 5 is_stmt 1 view .LVU88
 369 005a 6423     		movs	r3, #100
 370 005c 3222     		movs	r2, #50
 371 005e 08A9     		add	r1, sp, #32
 372 0060 4148     		ldr	r0, .L25+4
 373 0062 FFF7FEFF 		bl	HAL_UART_Transmit
 374              	.LVL18:
 375              	.L17:
 120:Core/Src/main.c ****   if(status == HAL_OK)
 376              		.loc 1 120 3 view .LVU89
 120:Core/Src/main.c ****   if(status == HAL_OK)
 377              		.loc 1 120 12 is_stmt 0 view .LVU90
 378 0066 07A9     		add	r1, sp, #28
 379 0068 4048     		ldr	r0, .L25+8
 380 006a FFF7FEFF 		bl	AccelGetId
 381              	.LVL19:
 121:Core/Src/main.c ****   {
 382              		.loc 1 121 3 is_stmt 1 view .LVU91
 121:Core/Src/main.c ****   {
 383              		.loc 1 121 5 is_stmt 0 view .LVU92
 384 006e 90B9     		cbnz	r0, .L18
 123:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)&message, 20, 100);
 385              		.loc 1 123 5 is_stmt 1 view .LVU93
 386 0070 079A     		ldr	r2, [sp, #28]
 387 0072 4049     		ldr	r1, .L25+16
 388 0074 08A8     		add	r0, sp, #32
 389              	.LVL20:
 123:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)&message, 20, 100);
 390              		.loc 1 123 5 is_stmt 0 view .LVU94
 391 0076 FFF7FEFF 		bl	sprintf
 392              	.LVL21:
 124:Core/Src/main.c ****   }
 393              		.loc 1 124 5 is_stmt 1 view .LVU95
 394 007a 6423     		movs	r3, #100
 395 007c 1422     		movs	r2, #20
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s 			page 16


 396 007e 08A9     		add	r1, sp, #32
 397 0080 3948     		ldr	r0, .L25+4
 398 0082 FFF7FEFF 		bl	HAL_UART_Transmit
 399              	.LVL22:
 400 0086 56E0     		b	.L19
 401              	.LVL23:
 402              	.L16:
 116:Core/Src/main.c ****   }
 403              		.loc 1 116 5 view .LVU96
 404 0088 6423     		movs	r3, #100
 405 008a 0722     		movs	r2, #7
 406 008c 3A49     		ldr	r1, .L25+20
 407 008e 3648     		ldr	r0, .L25+4
 408              	.LVL24:
 116:Core/Src/main.c ****   }
 409              		.loc 1 116 5 is_stmt 0 view .LVU97
 410 0090 FFF7FEFF 		bl	HAL_UART_Transmit
 411              	.LVL25:
 412 0094 E7E7     		b	.L17
 413              	.LVL26:
 414              	.L18:
 128:Core/Src/main.c ****   }
 415              		.loc 1 128 5 is_stmt 1 view .LVU98
 416 0096 6423     		movs	r3, #100
 417 0098 0722     		movs	r2, #7
 418 009a 3749     		ldr	r1, .L25+20
 419 009c 3248     		ldr	r0, .L25+4
 420              	.LVL27:
 128:Core/Src/main.c ****   }
 421              		.loc 1 128 5 is_stmt 0 view .LVU99
 422 009e FFF7FEFF 		bl	HAL_UART_Transmit
 423              	.LVL28:
 424 00a2 48E0     		b	.L19
 425              	.LVL29:
 426              	.L24:
 427              	.LBB8:
 139:Core/Src/main.c ****       float xf = (float)accelerometerData.x * 3.9f / 1000.0;
 428              		.loc 1 139 7 is_stmt 1 view .LVU100
 429 00a4 4FF48072 		mov	r2, #256
 430 00a8 0021     		movs	r1, #0
 431 00aa 08A8     		add	r0, sp, #32
 432              	.LVL30:
 139:Core/Src/main.c ****       float xf = (float)accelerometerData.x * 3.9f / 1000.0;
 433              		.loc 1 139 7 is_stmt 0 view .LVU101
 434 00ac FFF7FEFF 		bl	memset
 435              	.LVL31:
 140:Core/Src/main.c ****       float yf = (float)accelerometerData.y * 3.9f / 1000.0;
 436              		.loc 1 140 7 is_stmt 1 view .LVU102
 140:Core/Src/main.c ****       float yf = (float)accelerometerData.y * 3.9f / 1000.0;
 437              		.loc 1 140 42 is_stmt 0 view .LVU103
 438 00b0 BDF91430 		ldrsh	r3, [sp, #20]
 439 00b4 07EE903A 		vmov	s15, r3	@ int
 140:Core/Src/main.c ****       float yf = (float)accelerometerData.y * 3.9f / 1000.0;
 440              		.loc 1 140 18 view .LVU104
 441 00b8 F8EEE77A 		vcvt.f32.s32	s15, s15
 140:Core/Src/main.c ****       float yf = (float)accelerometerData.y * 3.9f / 1000.0;
 442              		.loc 1 140 45 view .LVU105
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s 			page 17


 443 00bc DFED2F5A 		vldr.32	s11, .L25+24
 444 00c0 67EEA57A 		vmul.f32	s15, s15, s11
 140:Core/Src/main.c ****       float yf = (float)accelerometerData.y * 3.9f / 1000.0;
 445              		.loc 1 140 13 view .LVU106
 446 00c4 9FED2E6A 		vldr.32	s12, .L25+28
 447              	.LVL32:
 141:Core/Src/main.c ****       float zf = (float)accelerometerData.z * 3.9f / 1000.0;
 448              		.loc 1 141 7 is_stmt 1 view .LVU107
 141:Core/Src/main.c ****       float zf = (float)accelerometerData.z * 3.9f / 1000.0;
 449              		.loc 1 141 42 is_stmt 0 view .LVU108
 450 00c8 BDF91630 		ldrsh	r3, [sp, #22]
 451 00cc 06EE903A 		vmov	s13, r3	@ int
 141:Core/Src/main.c ****       float zf = (float)accelerometerData.z * 3.9f / 1000.0;
 452              		.loc 1 141 18 view .LVU109
 453 00d0 F8EEE66A 		vcvt.f32.s32	s13, s13
 141:Core/Src/main.c ****       float zf = (float)accelerometerData.z * 3.9f / 1000.0;
 454              		.loc 1 141 45 view .LVU110
 455 00d4 66EEA56A 		vmul.f32	s13, s13, s11
 141:Core/Src/main.c ****       float zf = (float)accelerometerData.z * 3.9f / 1000.0;
 456              		.loc 1 141 13 view .LVU111
 457 00d8 86EE868A 		vdiv.f32	s16, s13, s12
 458              	.LVL33:
 142:Core/Src/main.c ****       sprintf(message, "X : %5.5f    Y : %5.5f    Z : %5.5f\n", xf, yf, zf);
 459              		.loc 1 142 7 is_stmt 1 view .LVU112
 142:Core/Src/main.c ****       sprintf(message, "X : %5.5f    Y : %5.5f    Z : %5.5f\n", xf, yf, zf);
 460              		.loc 1 142 42 is_stmt 0 view .LVU113
 461 00dc BDF91830 		ldrsh	r3, [sp, #24]
 462 00e0 07EE103A 		vmov	s14, r3	@ int
 142:Core/Src/main.c ****       sprintf(message, "X : %5.5f    Y : %5.5f    Z : %5.5f\n", xf, yf, zf);
 463              		.loc 1 142 18 view .LVU114
 464 00e4 B8EEC77A 		vcvt.f32.s32	s14, s14
 142:Core/Src/main.c ****       sprintf(message, "X : %5.5f    Y : %5.5f    Z : %5.5f\n", xf, yf, zf);
 465              		.loc 1 142 45 view .LVU115
 466 00e8 27EE257A 		vmul.f32	s14, s14, s11
 142:Core/Src/main.c ****       sprintf(message, "X : %5.5f    Y : %5.5f    Z : %5.5f\n", xf, yf, zf);
 467              		.loc 1 142 13 view .LVU116
 468 00ec C7EE068A 		vdiv.f32	s17, s14, s12
 469              	.LVL34:
 143:Core/Src/main.c ****       HAL_UART_Transmit(&huart2, (uint8_t *)message, 70, 100);
 470              		.loc 1 143 7 is_stmt 1 view .LVU117
 471 00f0 C7EE867A 		vdiv.f32	s15, s15, s12
 472              	.LVL35:
 143:Core/Src/main.c ****       HAL_UART_Transmit(&huart2, (uint8_t *)message, 70, 100);
 473              		.loc 1 143 7 is_stmt 0 view .LVU118
 474 00f4 17EE900A 		vmov	r0, s15
 475 00f8 FFF7FEFF 		bl	__aeabi_f2d
 476              	.LVL36:
 143:Core/Src/main.c ****       HAL_UART_Transmit(&huart2, (uint8_t *)message, 70, 100);
 477              		.loc 1 143 7 view .LVU119
 478 00fc 0446     		mov	r4, r0
 479 00fe 0D46     		mov	r5, r1
 480 0100 18EE900A 		vmov	r0, s17
 481 0104 FFF7FEFF 		bl	__aeabi_f2d
 482              	.LVL37:
 483 0108 CDE90201 		strd	r0, [sp, #8]
 484 010c 18EE100A 		vmov	r0, s16
 485 0110 FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s 			page 18


 486              	.LVL38:
 487 0114 CDE90001 		strd	r0, [sp]
 488 0118 2246     		mov	r2, r4
 489 011a 2B46     		mov	r3, r5
 490 011c 1949     		ldr	r1, .L25+32
 491 011e 08A8     		add	r0, sp, #32
 492 0120 FFF7FEFF 		bl	sprintf
 493              	.LVL39:
 144:Core/Src/main.c ****     }
 494              		.loc 1 144 7 is_stmt 1 view .LVU120
 495 0124 6423     		movs	r3, #100
 496 0126 4622     		movs	r2, #70
 497 0128 08A9     		add	r1, sp, #32
 498 012a 0F48     		ldr	r0, .L25+4
 499 012c FFF7FEFF 		bl	HAL_UART_Transmit
 500              	.LVL40:
 501              	.L22:
 144:Core/Src/main.c ****     }
 502              		.loc 1 144 7 is_stmt 0 view .LVU121
 503              	.LBE8:
 151:Core/Src/main.c ****   }
 504              		.loc 1 151 5 is_stmt 1 view .LVU122
 505 0130 6420     		movs	r0, #100
 506 0132 FFF7FEFF 		bl	HAL_Delay
 507              	.LVL41:
 134:Core/Src/main.c ****   {
 508              		.loc 1 134 9 view .LVU123
 509              	.L19:
 134:Core/Src/main.c ****   {
 510              		.loc 1 134 3 view .LVU124
 136:Core/Src/main.c ****     status = getAccelerations(&hi2c1, &accelerometerData);
 511              		.loc 1 136 5 view .LVU125
 512 0136 2021     		movs	r1, #32
 513 0138 1348     		ldr	r0, .L25+36
 514 013a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 515              	.LVL42:
 137:Core/Src/main.c ****     if(status == HAL_OK){
 516              		.loc 1 137 5 view .LVU126
 137:Core/Src/main.c ****     if(status == HAL_OK){
 517              		.loc 1 137 14 is_stmt 0 view .LVU127
 518 013e 05A9     		add	r1, sp, #20
 519 0140 0A48     		ldr	r0, .L25+8
 520 0142 FFF7FEFF 		bl	getAccelerations
 521              	.LVL43:
 138:Core/Src/main.c ****       memset(message, 0, sizeof(message));
 522              		.loc 1 138 5 is_stmt 1 view .LVU128
 138:Core/Src/main.c ****       memset(message, 0, sizeof(message));
 523              		.loc 1 138 7 is_stmt 0 view .LVU129
 524 0146 0028     		cmp	r0, #0
 525 0148 ACD0     		beq	.L24
 148:Core/Src/main.c ****       HAL_UART_Transmit(&huart2, (uint8_t *)message, 7, 100);
 526              		.loc 1 148 7 is_stmt 1 view .LVU130
 527 014a 08AC     		add	r4, sp, #32
 528 014c 0F4B     		ldr	r3, .L25+40
 529 014e 93E80300 		ldm	r3, {r0, r1}
 530              	.LVL44:
 148:Core/Src/main.c ****       HAL_UART_Transmit(&huart2, (uint8_t *)message, 7, 100);
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s 			page 19


 531              		.loc 1 148 7 is_stmt 0 view .LVU131
 532 0152 84E80300 		stm	r4, {r0, r1}
 149:Core/Src/main.c ****     }
 533              		.loc 1 149 7 is_stmt 1 view .LVU132
 534 0156 6423     		movs	r3, #100
 535 0158 0722     		movs	r2, #7
 536 015a 2146     		mov	r1, r4
 537 015c 0248     		ldr	r0, .L25+4
 538 015e FFF7FEFF 		bl	HAL_UART_Transmit
 539              	.LVL45:
 540 0162 E5E7     		b	.L22
 541              	.L26:
 542              		.align	2
 543              	.L25:
 544 0164 00000000 		.word	.LANCHOR0
 545 0168 00000000 		.word	huart2
 546 016c 00000000 		.word	hi2c1
 547 0170 00000000 		.word	.LC0
 548 0174 3C000000 		.word	.LC2
 549 0178 34000000 		.word	.LC1
 550 017c 9A997940 		.word	1081711002
 551 0180 00007A44 		.word	1148846080
 552 0184 50000000 		.word	.LC3
 553 0188 00000240 		.word	1073872896
 554 018c 78000000 		.word	.LC4
 555              		.cfi_endproc
 556              	.LFE133:
 558              		.global	UART2_rxBuffer
 559              		.section	.bss.UART2_rxBuffer,"aw",%nobits
 560              		.align	2
 561              		.set	.LANCHOR0,. + 0
 564              	UART2_rxBuffer:
 565 0000 00000000 		.space	4
 566              		.text
 567              	.Letext0:
 568              		.file 3 "c:\\gnu\\gnu_arm_embedded_toolchain\\10-2020-q4-major\\arm-none-eabi\\include\\machine\\_
 569              		.file 4 "c:\\gnu\\gnu_arm_embedded_toolchain\\10-2020-q4-major\\arm-none-eabi\\include\\sys\\_stdi
 570              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 571              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 572              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 573              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 574              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 575              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 576              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 577              		.file 12 "Core/Inc/i2c.h"
 578              		.file 13 "Core/Inc/usart.h"
 579              		.file 14 "Core/Inc/adxl345.h"
 580              		.file 15 "c:\\gnu\\gnu_arm_embedded_toolchain\\10-2020-q4-major\\arm-none-eabi\\include\\stdio.h"
 581              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 582              		.file 17 "Core/Inc/gpio.h"
 583              		.file 18 "Core/Inc/dma.h"
 584              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 585              		.file 20 "<built-in>"
ARM GAS  C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s:18     .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s:26     .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s:54     .text.HAL_UART_RxCpltCallback:00000010 $d
C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s:60     .text.Error_Handler:00000000 $t
C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s:67     .text.Error_Handler:00000000 Error_Handler
C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s:99     .text.SystemClock_Config:00000000 $t
C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s:106    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s:257    .text.SystemClock_Config:0000009c $d
C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s:263    .rodata.main.str1.4:00000000 $d
C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s:281    .text.main:00000000 $t
C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s:288    .text.main:00000000 main
C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s:544    .text.main:00000164 $d
C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s:564    .bss.UART2_rxBuffer:00000000 UART2_rxBuffer
C:\Users\zacfi\AppData\Local\Temp\ccnegtH9.s:560    .bss.UART2_rxBuffer:00000000 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart2
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_f2d
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_I2C1_Init
MX_USART2_UART_Init
HAL_UART_Receive_DMA
setTargetDeviceAddress
AccelInit
AccelGetId
sprintf
HAL_Delay
HAL_GPIO_TogglePin
getAccelerations
hi2c1
